---
bit_dev_user: 'takelage'
bit_remote: ''
bit_require_file: 'bitrequire.yml'
bit_root: '/bit'
bit_ssh: ''
cmd_bit_check_workspace_bit_list: 'bit list'
cmd_bit_check_workspace_pwd: 'pwd'
cmd_bit_clipboard_lib_bit_status: 'bit status'
cmd_bit_clipboard_copy_bit_list_scope: 'bit list --skip-update --json %{scope}'
cmd_bit_clipboard_copy_bit_list_remotes: 'bit remote --skip-update'
cmd_bit_clipboard_copy_bit_add_dir: 'bit add --skip-update --id %{id} --main %{dir}/README.bit %{dir}'
cmd_bit_clipboard_copy_bit_tag_id: 'bit tag --skip-update --skip-tests %{id}'
cmd_bit_clipboard_copy_bit_export_to_scope: 'bit export --skip-update %{scope}'
cmd_bit_clipboard_git_add: 'git add %{file}'
cmd_bit_clipboard_git_commit: 'git commit --message="%{message}"'
cmd_bit_clipboard_git_pull: 'git pull origin %{main}'
cmd_bit_clipboard_git_push: 'git push origin %{main}'
cmd_bit_clipboard_paste_bit_list_scope: 'bit list --skip-update --json %{scope}'
cmd_bit_clipboard_paste_bit_import_cid: 'bit import --ignore-package-json --ignore-dist --skip-update --path %{dir} %{cid}'
cmd_bit_clipboard_pull_bit_import_all: 'bit import --ignore-package-json --ignore-dist --skip-update'
cmd_bit_clipboard_pull_bit_checkout_all: 'bit checkout --ignore-package-json --ignore-dist --skip-update --skip-npm-install --all latest'
cmd_bit_clipboard_push_bit_tag_all: 'bit tag --skip-update --skip-tests --all'
cmd_bit_clipboard_push_bit_export_all: 'bit export --skip-update --all'
cmd_bit_clipboard_export_bit_list: 'bit list --skip-update --json %{scope}'
cmd_bit_require_lib_bit_list: 'bit list --skip-update --json'
cmd_bit_require_lib_bit_list_ids: 'bit list --skip-update --json --ids'
cmd_bit_scope_add_scope: 'bit remote add %{remote}/%{scope}'
cmd_bit_scope_list_find_scopes: 'find -L %{root} -name scope.json'
cmd_bit_scope_new_bit_init: 'mkdir -p %{root}/%{scope} && cd %{root}/%{scope} && bit init --bare'
cmd_bit_scope_remove_scope: 'rm --force --recursive %{root}/%{scope}'
cmd_docker_check_daemon_docker_info: 'docker info'
cmd_docker_check_socat_which_socat: 'which socat'
cmd_docker_container_check_existing_docker_ps: 'docker ps --filter name=^%{container}$ --quiet'
cmd_docker_container_check_network_docker_network: 'docker network ls --quiet --filter name=^%{network}$'
cmd_docker_container_check_orphaned_docker_exec: 'docker exec --interactive %{container} ps a'
cmd_docker_container_create: 'docker run --detach --env TAKELAGE_PROJECT_BASE_DIR=%{workdir} --env TZ=%{timezone} --hostname %{container} --name %{container} --network %{container} --privileged --rm --shm-size %{shmsize} --tty --volume %{dockersock}:/var/run/docker.sock --volume %{homedir}:/hostdir --volume %{workdir}:/project %{volume_dev} --workdir /project %{addhost} %{docker_run_options} %{image} %{entrypoint} --gid %{gid} --home %{homedir} --uid %{uid} --username %{username} --gpg_agent_port %{gpg_agent_port} --gpg_ssh_agent_port %{gpg_ssh_agent_port} --extra=%{extra} %{entrypoint_options}'
cmd_docker_container_create_network: 'docker network create %{network}'
cmd_docker_container_enter_container: 'docker exec --interactive --tty %{container} %{loginpoint} --username %{username}'
cmd_docker_container_get_container_name: 'docker ps --filter id=%{container} --format "{{.Names}}"'
cmd_docker_container_get_containers: 'docker ps --all --filter name=^%{docker_repo}_ --quiet'
cmd_docker_container_remove_network: 'docker network rm %{network}'
cmd_docker_container_docker_exec: 'docker exec %{container} su %{username} -c "LANG=en_US.UTF-8 %{command}"'
cmd_docker_container_stop_container: 'docker stop %{container}'
cmd_docker_image_tag_check_docker_images: 'docker images --quiet %{image}'
cmd_docker_image_tag_list_docker_images: 'docker images %{docker_user}\/%{docker_repo} --format "{{.Tag}}"'
cmd_docker_image_update_docker_pull_latest: 'docker pull %{docker_user}/%{docker_repo}:latest'
cmd_docker_image_update_docker_remove_dangling: 'docker image prune --force'
cmd_docker_socket_config_agent_socket_path: 'gpgconf --list-dirs agent-socket'
cmd_docker_socket_config_agent_ssh_socket_path: 'gpgconf --list-dirs agent-ssh-socket'
cmd_docker_socket_get_start: 'sudo socat TCP-LISTEN:%{port},bind=%{host},reuseaddr,fork UNIX-CLIENT:%{path}'
cmd_docker_socket_start_sudo_true: 'sudo true'
cmd_docker_socket_stop_docker_socket_ps: 'sudo ps a -o pid,command'
cmd_docker_socket_stop_docker_socket_kill: 'sudo kill -SIGTERM %{pid}'
cmd_git_check_clean_git_unstaged: 'git diff --exit-code'
cmd_git_check_clean_git_uncommitted: 'git diff --cached --exit-code'
cmd_git_check_clean_git_status: 'git status --porcelain'
cmd_git_check_main_git_branch: 'git symbolic-ref HEAD'
cmd_git_check_workspace_git_repo: 'git -C %{projectroot} rev-parse'
cmd_git_check_workspace_pwd: 'pwd'
cmd_info_status_lib_git_name: 'git -C %{root} config user.name'
cmd_info_status_lib_git_email: 'git -C %{root} config user.email'
cmd_info_status_lib_git_signingkey: 'git -C %{root} config user.signingKey'
cmd_info_status_lib_git_key_available: 'gpg --list-key %{key}'
cmd_info_status_gopass_root_store: 'gopass config | grep "path" | cut -d " " -f 2'
cmd_info_status_gpg_agent: 'gpg-connect-agent /bye'
cmd_info_status_gpg_keys: 'gpg --list-keys'
cmd_info_status_ssh_keys: 'ssh-add -l'
docker_debug: 'ansible/roles/takel-takelage/files/takelscripts'
docker_entrypoint_extra: '.config/gcloud'
docker_entrypoint_options: ''
docker_registry: 'https://registry.hub.docker.com'
docker_repo: 'takelage'
docker_run_options: '--env GOOGLE_APPLICATION_CREDENTIALS=/hostdir/.google/default.json'
docker_shm_size: '512M'
docker_socket_gpg_agent_port: 17874
docker_socket_gpg_ssh_agent_port: 17875
docker_tag: 'latest'
docker_user: 'takelage'
git_main_branch: 'main'
info_project_main: 'project.yml'
info_project_private: 'private/project.yml'
