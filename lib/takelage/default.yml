---
bit_add_dir: 'bit add --skip-update --id %{id} --main %{dir}/README.bit %{dir}'
bit_checkout_all: 'bit checkout --ignore-dist --skip-update --all latest'
bit_dev: 'takelage'
bit_export_to_scope: 'bit export --skip-update %{scope}'
bit_export_all: 'bit export --skip-update --all'
bit_import_all: 'bit import --ignore-package-json --ignore-dist --skip-update'
bit_import_cid: 'bit import --ignore-package-json --ignore-dist --skip-update --path %{dir} %{cid}'
bit_list_remotes: 'bit remote --skip-update'
bit_list_scope: 'bit list --skip-update --json %{scope}'
bit_remote: ''
bit_repo: 'bit list'
bit_scope_root: '/bit'
bit_scope_list: 'find -L %{root} -name scope.json'
bit_scope_new: 'mkdir -p %{root}/%{scope} && cd %{root}/%{scope} && bit init --bare'
bit_scope_remove: 'rm --force --recursive %{root}/%{scope}'
bit_ssh: ''
bit_tag_id: 'bit tag --skip-update --skip-tests %{id}'
bit_tag_all: 'bit tag --skip-update --skip-tests --all'
docker_create: 'docker run --detach --env GEOSPIN_PROJECT_BASE_DIR=%{workdir} --env GOOGLE_APPLICATION_CREDENTIALS=/srv/google/default.json --env TAKELAGE_PROJECT_BASE_DIR=%{workdir} --env TZ=%{timezone} --hostname %{container} --name %{container} --network %{container} --privileged --rm --tty --volume %{dockersock}:/var/run/docker.sock --volume %{homedir}/.config/gcloud:/srv/gcloud --volume %{homedir}/.google:/srv/google --volume %{homedir}:/homedir --volume %{workdir}:/project %{volume_dev} --workdir /project %{image} %{entrypoint} --gid %{gid} --home %{homedir} --uid %{uid} --username %{username}'
docker_create_network: 'docker network create %{network}'
docker_debug: 'ansible/roles/takel-takelage/files/pyscripts'
docker_enter: 'docker exec --interactive --tty %{container} %{loginpoint} --username %{username}'
docker_existing: 'docker ps --filter name=^%{container}$ --quiet'
docker_get: 'docker ps --all --filter name=^%{docker_image}_ --quiet'
docker_get_container_name_by_id: 'docker ps --filter id=%{container} --format "{{.Names}}"'
docker_image: 'takelage'
docker_images: 'docker images --quiet %{image}'
docker_info: 'docker info'
docker_network: 'docker network ls --quiet --filter name=^%{network}$'
docker_orphaned: 'docker exec --interactive %{container} ps a'
docker_pull_latest: 'docker pull %{docker_repo}/%{docker_image}:%{tag_latest_remote}'
docker_remove_network: 'docker network rm %{network}'
docker_repo: 'takelage'
docker_run_command: 'docker exec %{container} su %{username} -c "LANG=en_US.UTF-8 %{command}"'
docker_socket_agent_port: 20000
docker_socket_agent_ssh_port: 20001
docker_socket_agent_extra_port: 20002
docker_socket_agent_browser_port: 20003
docker_socket_ps: 'sudo ps a -o pid,command'
docker_socket_gpgconf: 'gpgconf --list-dirs'
docker_socket_kill: 'sudo kill -SIGTERM %{pid}'
docker_socket_start: 'sudo socat TCP-LISTEN:%{port},bind=%{host},reuseaddr,fork UNIX-CLIENT:%{path}'
docker_stop: 'docker stop %{container}'
docker_tag: 'latest'
docker_tags: 'docker images %{docker_repo}\/%{docker_image} --format "{{.Tag}}"'
docker_tagsurl: 'https://hub.docker.com/v2/repositories/takelage/takelage/tags'
git_branch: 'git symbolic-ref HEAD'
git_repo: 'git -C . rev-parse'
git_status: 'git status --porcelain'
git_unstaged: 'git diff --exit-code'
git_uncommitted: 'git diff --cached --exit-code'
info_project_main: 'project.yml'
info_project_private: 'private/project.yml'
pwd: 'pwd'
sudo_true: 'sudo true'
